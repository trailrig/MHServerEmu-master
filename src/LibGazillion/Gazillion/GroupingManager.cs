// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Gazillion {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GroupingManager {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatResponseToExternalLogin__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatResponseToExternalLogin, global::Gazillion.ChatResponseToExternalLogin.Builder> internal__static_Gazillion_ChatResponseToExternalLogin__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatNormalMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatNormalMessage, global::Gazillion.ChatNormalMessage.Builder> internal__static_Gazillion_ChatNormalMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatTellMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatTellMessage, global::Gazillion.ChatTellMessage.Builder> internal__static_Gazillion_ChatTellMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatBroadcastMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatBroadcastMessage, global::Gazillion.ChatBroadcastMessage.Builder> internal__static_Gazillion_ChatBroadcastMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatErrorMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatErrorMessage, global::Gazillion.ChatErrorMessage.Builder> internal__static_Gazillion_ChatErrorMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatBanVoteResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatBanVoteResponse, global::Gazillion.ChatBanVoteResponse.Builder> internal__static_Gazillion_ChatBanVoteResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatCreateChatRoomResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatCreateChatRoomResult, global::Gazillion.ChatCreateChatRoomResult.Builder> internal__static_Gazillion_ChatCreateChatRoomResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatAddPlayerToRoomResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatAddPlayerToRoomResult, global::Gazillion.ChatAddPlayerToRoomResult.Builder> internal__static_Gazillion_ChatAddPlayerToRoomResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatScrubTextResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatScrubTextResult, global::Gazillion.ChatScrubTextResult.Builder> internal__static_Gazillion_ChatScrubTextResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatServerNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatServerNotification, global::Gazillion.ChatServerNotification.Builder> internal__static_Gazillion_ChatServerNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_ChatClientIsLoggedIn__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatClientIsLoggedIn, global::Gazillion.ChatClientIsLoggedIn.Builder> internal__static_Gazillion_ChatClientIsLoggedIn__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GroupingManager() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVHcm91cGluZ01hbmFnZXIucHJvdG8SCUdhemlsbGlvbhoQQ2hhdENvbW1v", 
            "bi5wcm90bxoUQ29tbW9uTWVzc2FnZXMucHJvdG8iQQobQ2hhdFJlc3BvbnNl", 
            "VG9FeHRlcm5hbExvZ2luEiIKDHNvbWVyZXNwb25zZRgBIAEoDFIMc29tZXJl", 
            "c3BvbnNlIvsBChFDaGF0Tm9ybWFsTWVzc2FnZRI0Cghyb29tVHlwZRgBIAIo", 
            "DjIYLkdhemlsbGlvbi5DaGF0Um9vbVR5cGVzUghyb29tVHlwZRImCg5mcm9t", 
            "UGxheWVyTmFtZRgCIAIoCVIOZnJvbVBsYXllck5hbWUSNgoKdGhlTWVzc2Fn", 
            "ZRgDIAIoCzIWLkdhemlsbGlvbi5DaGF0TWVzc2FnZVIKdGhlTWVzc2FnZRIk", 
            "Cg1wcmVzdGlnZUxldmVsGAQgASgFUg1wcmVzdGlnZUxldmVsEioKEGNvbnNv", 
            "bGVBY2NvdW50SWQYBSABKARSEGNvbnNvbGVBY2NvdW50SWQiwwEKD0NoYXRU", 
            "ZWxsTWVzc2FnZRImCg5mcm9tUGxheWVyTmFtZRgBIAIoCVIOZnJvbVBsYXll", 
            "ck5hbWUSNgoKdGhlTWVzc2FnZRgCIAIoCzIWLkdhemlsbGlvbi5DaGF0TWVz", 
            "c2FnZVIKdGhlTWVzc2FnZRIkCg1wcmVzdGlnZUxldmVsGAMgASgFUg1wcmVz", 
            "dGlnZUxldmVsEioKEGNvbnNvbGVBY2NvdW50SWQYBCABKARSEGNvbnNvbGVB", 
            "Y2NvdW50SWQi/gEKFENoYXRCcm9hZGNhc3RNZXNzYWdlEjQKCHJvb21UeXBl", 
            "GAEgAigOMhguR2F6aWxsaW9uLkNoYXRSb29tVHlwZXNSCHJvb21UeXBlEiYK", 
            "DmZyb21QbGF5ZXJOYW1lGAIgAigJUg5mcm9tUGxheWVyTmFtZRI2Cgp0aGVN", 
            "ZXNzYWdlGAMgAigLMhYuR2F6aWxsaW9uLkNoYXRNZXNzYWdlUgp0aGVNZXNz", 
            "YWdlEiQKDXByZXN0aWdlTGV2ZWwYBCABKAVSDXByZXN0aWdlTGV2ZWwSKgoQ", 
            "Y29uc29sZUFjY291bnRJZBgFIAEoBFIQY29uc29sZUFjY291bnRJZCJUChBD", 
            "aGF0RXJyb3JNZXNzYWdlEkAKDGVycm9yTWVzc2FnZRgBIAIoDjIcLkdhemls", 
            "bGlvbi5DaGF0RXJyb3JNZXNzYWdlc1IMZXJyb3JNZXNzYWdlIokBChNDaGF0", 
            "QmFuVm90ZVJlc3BvbnNlEioKEHRhcmdldFBsYXllck5hbWUYASACKAlSEHRh", 
            "cmdldFBsYXllck5hbWUSRgoMcmVzcG9uc2VDb2RlGAIgAigOMiIuR2F6aWxs", 
            "aW9uLkNoYXRCYW5Wb3RlUmVzcG9uc2VDb2RlUgxyZXNwb25zZUNvZGUifwoY", 
            "Q2hhdENyZWF0ZUNoYXRSb29tUmVzdWx0EioKEHJlcXVlc3RpbmdHYW1lSWQY", 
            "AyACKARSEHJlcXVlc3RpbmdHYW1lSWQSHwoHc3VjY2VzcxgBIAEoCDoFZmFs", 
            "c2VSB3N1Y2Nlc3MSFgoGcmVhc29uGAIgASgJUgZyZWFzb24igAEKGUNoYXRB", 
            "ZGRQbGF5ZXJUb1Jvb21SZXN1bHQSKgoQcmVxdWVzdGluZ0dhbWVJZBgDIAIo", 
            "BFIQcmVxdWVzdGluZ0dhbWVJZBIfCgdzdWNjZXNzGAEgASgIOgVmYWxzZVIH", 
            "c3VjY2VzcxIWCgZyZWFzb24YAiABKAlSBnJlYXNvbiKrAQoTQ2hhdFNjcnVi", 
            "VGV4dFJlc3VsdBIqChByZXF1ZXN0aW5nR2FtZUlkGAEgAigEUhByZXF1ZXN0", 
            "aW5nR2FtZUlkEiIKDHRleHRPcmlnaW5hbBgCIAIoCVIMdGV4dE9yaWdpbmFs", 
            "EiIKDHRleHRTY3J1YmJlZBgDIAIoCVIMdGV4dFNjcnViYmVkEiAKC3JlbW90", 
            "ZUpvYklkGAQgAigEUgtyZW1vdGVKb2JJZCI4ChZDaGF0U2VydmVyTm90aWZp", 
            "Y2F0aW9uEh4KCnRoZU1lc3NhZ2UYASACKAlSCnRoZU1lc3NhZ2UiYgoUQ2hh", 
            "dENsaWVudElzTG9nZ2VkSW4SKgoQcmVxdWVzdGluZ0dhbWVJZBgBIAIoBFIQ", 
            "cmVxdWVzdGluZ0dhbWVJZBIeCgpwbGF5ZXJEYklkGAIgAigEUgpwbGF5ZXJE", 
            "YklkKogCChdDaGF0QmFuVm90ZVJlc3BvbnNlQ29kZRIZChVDSEFUX0JBTl9W", 
            "T1RFX1NVQ0NFU1MQABIXChNDSEFUX0JBTl9WT1RFX0VSUk9SEAESIAocQ0hB", 
            "VF9CQU5fVk9URV9BTFJFQURZX0JBTk5FRBACEh8KG0NIQVRfQkFOX1ZPVEVf", 
            "QUxSRUFEWV9WT1RFRBADEh0KGUNIQVRfQkFOX1ZPVEVfTk9UX0FMTE9XRUQQ", 
            "BBIYChRDSEFUX0JBTl9WT1RFX0JBTk5FRBAFEiAKHENIQVRfQkFOX1ZPVEVf", 
          "SU5WQUxJRF9UQVJHRVQQBhIbChdDSEFUX0JBTl9WT1RFX05VTV9DT0RFUxAH"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Gazillion_ChatResponseToExternalLogin__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Gazillion_ChatResponseToExternalLogin__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatResponseToExternalLogin, global::Gazillion.ChatResponseToExternalLogin.Builder>(internal__static_Gazillion_ChatResponseToExternalLogin__Descriptor,
                new string[] { "Someresponse", });
        internal__static_Gazillion_ChatNormalMessage__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Gazillion_ChatNormalMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatNormalMessage, global::Gazillion.ChatNormalMessage.Builder>(internal__static_Gazillion_ChatNormalMessage__Descriptor,
                new string[] { "RoomType", "FromPlayerName", "TheMessage", "PrestigeLevel", "ConsoleAccountId", });
        internal__static_Gazillion_ChatTellMessage__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Gazillion_ChatTellMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatTellMessage, global::Gazillion.ChatTellMessage.Builder>(internal__static_Gazillion_ChatTellMessage__Descriptor,
                new string[] { "FromPlayerName", "TheMessage", "PrestigeLevel", "ConsoleAccountId", });
        internal__static_Gazillion_ChatBroadcastMessage__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Gazillion_ChatBroadcastMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatBroadcastMessage, global::Gazillion.ChatBroadcastMessage.Builder>(internal__static_Gazillion_ChatBroadcastMessage__Descriptor,
                new string[] { "RoomType", "FromPlayerName", "TheMessage", "PrestigeLevel", "ConsoleAccountId", });
        internal__static_Gazillion_ChatErrorMessage__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Gazillion_ChatErrorMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatErrorMessage, global::Gazillion.ChatErrorMessage.Builder>(internal__static_Gazillion_ChatErrorMessage__Descriptor,
                new string[] { "ErrorMessage", });
        internal__static_Gazillion_ChatBanVoteResponse__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Gazillion_ChatBanVoteResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatBanVoteResponse, global::Gazillion.ChatBanVoteResponse.Builder>(internal__static_Gazillion_ChatBanVoteResponse__Descriptor,
                new string[] { "TargetPlayerName", "ResponseCode", });
        internal__static_Gazillion_ChatCreateChatRoomResult__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Gazillion_ChatCreateChatRoomResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatCreateChatRoomResult, global::Gazillion.ChatCreateChatRoomResult.Builder>(internal__static_Gazillion_ChatCreateChatRoomResult__Descriptor,
                new string[] { "RequestingGameId", "Success", "Reason", });
        internal__static_Gazillion_ChatAddPlayerToRoomResult__Descriptor = Descriptor.MessageTypes[7];
        internal__static_Gazillion_ChatAddPlayerToRoomResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatAddPlayerToRoomResult, global::Gazillion.ChatAddPlayerToRoomResult.Builder>(internal__static_Gazillion_ChatAddPlayerToRoomResult__Descriptor,
                new string[] { "RequestingGameId", "Success", "Reason", });
        internal__static_Gazillion_ChatScrubTextResult__Descriptor = Descriptor.MessageTypes[8];
        internal__static_Gazillion_ChatScrubTextResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatScrubTextResult, global::Gazillion.ChatScrubTextResult.Builder>(internal__static_Gazillion_ChatScrubTextResult__Descriptor,
                new string[] { "RequestingGameId", "TextOriginal", "TextScrubbed", "RemoteJobId", });
        internal__static_Gazillion_ChatServerNotification__Descriptor = Descriptor.MessageTypes[9];
        internal__static_Gazillion_ChatServerNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatServerNotification, global::Gazillion.ChatServerNotification.Builder>(internal__static_Gazillion_ChatServerNotification__Descriptor,
                new string[] { "TheMessage", });
        internal__static_Gazillion_ChatClientIsLoggedIn__Descriptor = Descriptor.MessageTypes[10];
        internal__static_Gazillion_ChatClientIsLoggedIn__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.ChatClientIsLoggedIn, global::Gazillion.ChatClientIsLoggedIn.Builder>(internal__static_Gazillion_ChatClientIsLoggedIn__Descriptor,
                new string[] { "RequestingGameId", "PlayerDbId", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::Gazillion.ChatCommon.RegisterAllExtensions(registry);
        global::Gazillion.CommonMessages.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::Gazillion.ChatCommon.Descriptor, 
          global::Gazillion.CommonMessages.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum ChatBanVoteResponseCode {
    CHAT_BAN_VOTE_SUCCESS = 0,
    CHAT_BAN_VOTE_ERROR = 1,
    CHAT_BAN_VOTE_ALREADY_BANNED = 2,
    CHAT_BAN_VOTE_ALREADY_VOTED = 3,
    CHAT_BAN_VOTE_NOT_ALLOWED = 4,
    CHAT_BAN_VOTE_BANNED = 5,
    CHAT_BAN_VOTE_INVALID_TARGET = 6,
    CHAT_BAN_VOTE_NUM_CODES = 7,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatResponseToExternalLogin : pb::GeneratedMessage<ChatResponseToExternalLogin, ChatResponseToExternalLogin.Builder> {
    private ChatResponseToExternalLogin() { }
    private static readonly ChatResponseToExternalLogin defaultInstance = new ChatResponseToExternalLogin().MakeReadOnly();
    private static readonly string[] _chatResponseToExternalLoginFieldNames = new string[] { "someresponse" };
    private static readonly uint[] _chatResponseToExternalLoginFieldTags = new uint[] { 10 };
    public static ChatResponseToExternalLogin DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatResponseToExternalLogin DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatResponseToExternalLogin ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatResponseToExternalLogin__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatResponseToExternalLogin, ChatResponseToExternalLogin.Builder> InternalFieldAccessors {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatResponseToExternalLogin__FieldAccessorTable; }
    }
    
    public const int SomeresponseFieldNumber = 1;
    private bool hasSomeresponse;
    private pb::ByteString someresponse_ = pb::ByteString.Empty;
    public bool HasSomeresponse {
      get { return hasSomeresponse; }
    }
    public pb::ByteString Someresponse {
      get { return someresponse_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatResponseToExternalLoginFieldNames;
      if (hasSomeresponse) {
        output.WriteBytes(1, field_names[0], Someresponse);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSomeresponse) {
        size += pb::CodedOutputStream.ComputeBytesSize(1, Someresponse);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatResponseToExternalLogin ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatResponseToExternalLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatResponseToExternalLogin ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatResponseToExternalLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatResponseToExternalLogin ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatResponseToExternalLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatResponseToExternalLogin ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatResponseToExternalLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatResponseToExternalLogin ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatResponseToExternalLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatResponseToExternalLogin MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatResponseToExternalLogin prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatResponseToExternalLogin, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatResponseToExternalLogin cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatResponseToExternalLogin result;
      
      private ChatResponseToExternalLogin PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatResponseToExternalLogin original = result;
          result = new ChatResponseToExternalLogin();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatResponseToExternalLogin MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatResponseToExternalLogin.Descriptor; }
      }
      
      public override ChatResponseToExternalLogin DefaultInstanceForType {
        get { return global::Gazillion.ChatResponseToExternalLogin.DefaultInstance; }
      }
      
      public override ChatResponseToExternalLogin BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatResponseToExternalLogin) {
          return MergeFrom((ChatResponseToExternalLogin) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatResponseToExternalLogin other) {
        if (other == global::Gazillion.ChatResponseToExternalLogin.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSomeresponse) {
          Someresponse = other.Someresponse;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatResponseToExternalLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatResponseToExternalLoginFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSomeresponse = input.ReadBytes(ref result.someresponse_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSomeresponse {
        get { return result.hasSomeresponse; }
      }
      public pb::ByteString Someresponse {
        get { return result.Someresponse; }
        set { SetSomeresponse(value); }
      }
      public Builder SetSomeresponse(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSomeresponse = true;
        result.someresponse_ = value;
        return this;
      }
      public Builder ClearSomeresponse() {
        PrepareBuilder();
        result.hasSomeresponse = false;
        result.someresponse_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ChatResponseToExternalLogin() {
      object.ReferenceEquals(global::Gazillion.GroupingManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatNormalMessage : pb::GeneratedMessage<ChatNormalMessage, ChatNormalMessage.Builder> {
    private ChatNormalMessage() { }
    private static readonly ChatNormalMessage defaultInstance = new ChatNormalMessage().MakeReadOnly();
    private static readonly string[] _chatNormalMessageFieldNames = new string[] { "consoleAccountId", "fromPlayerName", "prestigeLevel", "roomType", "theMessage" };
    private static readonly uint[] _chatNormalMessageFieldTags = new uint[] { 40, 18, 32, 8, 26 };
    public static ChatNormalMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatNormalMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatNormalMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatNormalMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatNormalMessage, ChatNormalMessage.Builder> InternalFieldAccessors {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatNormalMessage__FieldAccessorTable; }
    }
    
    public const int RoomTypeFieldNumber = 1;
    private bool hasRoomType;
    private global::Gazillion.ChatRoomTypes roomType_ = global::Gazillion.ChatRoomTypes.CHAT_ROOM_TYPE_LOCAL;
    public bool HasRoomType {
      get { return hasRoomType; }
    }
    public global::Gazillion.ChatRoomTypes RoomType {
      get { return roomType_; }
    }
    
    public const int FromPlayerNameFieldNumber = 2;
    private bool hasFromPlayerName;
    private string fromPlayerName_ = "";
    public bool HasFromPlayerName {
      get { return hasFromPlayerName; }
    }
    public string FromPlayerName {
      get { return fromPlayerName_; }
    }
    
    public const int TheMessageFieldNumber = 3;
    private bool hasTheMessage;
    private global::Gazillion.ChatMessage theMessage_;
    public bool HasTheMessage {
      get { return hasTheMessage; }
    }
    public global::Gazillion.ChatMessage TheMessage {
      get { return theMessage_ ?? global::Gazillion.ChatMessage.DefaultInstance; }
    }
    
    public const int PrestigeLevelFieldNumber = 4;
    private bool hasPrestigeLevel;
    private int prestigeLevel_;
    public bool HasPrestigeLevel {
      get { return hasPrestigeLevel; }
    }
    public int PrestigeLevel {
      get { return prestigeLevel_; }
    }
    
    public const int ConsoleAccountIdFieldNumber = 5;
    private bool hasConsoleAccountId;
    private ulong consoleAccountId_;
    public bool HasConsoleAccountId {
      get { return hasConsoleAccountId; }
    }
    public ulong ConsoleAccountId {
      get { return consoleAccountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoomType) return false;
        if (!hasFromPlayerName) return false;
        if (!hasTheMessage) return false;
        if (!TheMessage.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatNormalMessageFieldNames;
      if (hasRoomType) {
        output.WriteEnum(1, field_names[3], (int) RoomType, RoomType);
      }
      if (hasFromPlayerName) {
        output.WriteString(2, field_names[1], FromPlayerName);
      }
      if (hasTheMessage) {
        output.WriteMessage(3, field_names[4], TheMessage);
      }
      if (hasPrestigeLevel) {
        output.WriteInt32(4, field_names[2], PrestigeLevel);
      }
      if (hasConsoleAccountId) {
        output.WriteUInt64(5, field_names[0], ConsoleAccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRoomType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) RoomType);
      }
      if (hasFromPlayerName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, FromPlayerName);
      }
      if (hasTheMessage) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, TheMessage);
      }
      if (hasPrestigeLevel) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, PrestigeLevel);
      }
      if (hasConsoleAccountId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, ConsoleAccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatNormalMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatNormalMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatNormalMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatNormalMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatNormalMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatNormalMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatNormalMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatNormalMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatNormalMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatNormalMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatNormalMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatNormalMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatNormalMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatNormalMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatNormalMessage result;
      
      private ChatNormalMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatNormalMessage original = result;
          result = new ChatNormalMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatNormalMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatNormalMessage.Descriptor; }
      }
      
      public override ChatNormalMessage DefaultInstanceForType {
        get { return global::Gazillion.ChatNormalMessage.DefaultInstance; }
      }
      
      public override ChatNormalMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatNormalMessage) {
          return MergeFrom((ChatNormalMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatNormalMessage other) {
        if (other == global::Gazillion.ChatNormalMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomType) {
          RoomType = other.RoomType;
        }
        if (other.HasFromPlayerName) {
          FromPlayerName = other.FromPlayerName;
        }
        if (other.HasTheMessage) {
          MergeTheMessage(other.TheMessage);
        }
        if (other.HasPrestigeLevel) {
          PrestigeLevel = other.PrestigeLevel;
        }
        if (other.HasConsoleAccountId) {
          ConsoleAccountId = other.ConsoleAccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatNormalMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatNormalMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.roomType_, out unknown)) {
                result.hasRoomType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasFromPlayerName = input.ReadString(ref result.fromPlayerName_);
              break;
            }
            case 26: {
              global::Gazillion.ChatMessage.Builder subBuilder = global::Gazillion.ChatMessage.CreateBuilder();
              if (result.hasTheMessage) {
                subBuilder.MergeFrom(TheMessage);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TheMessage = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasPrestigeLevel = input.ReadInt32(ref result.prestigeLevel_);
              break;
            }
            case 40: {
              result.hasConsoleAccountId = input.ReadUInt64(ref result.consoleAccountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomType {
       get { return result.hasRoomType; }
      }
      public global::Gazillion.ChatRoomTypes RoomType {
        get { return result.RoomType; }
        set { SetRoomType(value); }
      }
      public Builder SetRoomType(global::Gazillion.ChatRoomTypes value) {
        PrepareBuilder();
        result.hasRoomType = true;
        result.roomType_ = value;
        return this;
      }
      public Builder ClearRoomType() {
        PrepareBuilder();
        result.hasRoomType = false;
        result.roomType_ = global::Gazillion.ChatRoomTypes.CHAT_ROOM_TYPE_LOCAL;
        return this;
      }
      
      public bool HasFromPlayerName {
        get { return result.hasFromPlayerName; }
      }
      public string FromPlayerName {
        get { return result.FromPlayerName; }
        set { SetFromPlayerName(value); }
      }
      public Builder SetFromPlayerName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFromPlayerName = true;
        result.fromPlayerName_ = value;
        return this;
      }
      public Builder ClearFromPlayerName() {
        PrepareBuilder();
        result.hasFromPlayerName = false;
        result.fromPlayerName_ = "";
        return this;
      }
      
      public bool HasTheMessage {
       get { return result.hasTheMessage; }
      }
      public global::Gazillion.ChatMessage TheMessage {
        get { return result.TheMessage; }
        set { SetTheMessage(value); }
      }
      public Builder SetTheMessage(global::Gazillion.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTheMessage = true;
        result.theMessage_ = value;
        return this;
      }
      public Builder SetTheMessage(global::Gazillion.ChatMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTheMessage = true;
        result.theMessage_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTheMessage(global::Gazillion.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTheMessage &&
            result.theMessage_ != global::Gazillion.ChatMessage.DefaultInstance) {
            result.theMessage_ = global::Gazillion.ChatMessage.CreateBuilder(result.theMessage_).MergeFrom(value).BuildPartial();
        } else {
          result.theMessage_ = value;
        }
        result.hasTheMessage = true;
        return this;
      }
      public Builder ClearTheMessage() {
        PrepareBuilder();
        result.hasTheMessage = false;
        result.theMessage_ = null;
        return this;
      }
      
      public bool HasPrestigeLevel {
        get { return result.hasPrestigeLevel; }
      }
      public int PrestigeLevel {
        get { return result.PrestigeLevel; }
        set { SetPrestigeLevel(value); }
      }
      public Builder SetPrestigeLevel(int value) {
        PrepareBuilder();
        result.hasPrestigeLevel = true;
        result.prestigeLevel_ = value;
        return this;
      }
      public Builder ClearPrestigeLevel() {
        PrepareBuilder();
        result.hasPrestigeLevel = false;
        result.prestigeLevel_ = 0;
        return this;
      }
      
      public bool HasConsoleAccountId {
        get { return result.hasConsoleAccountId; }
      }
      public ulong ConsoleAccountId {
        get { return result.ConsoleAccountId; }
        set { SetConsoleAccountId(value); }
      }
      public Builder SetConsoleAccountId(ulong value) {
        PrepareBuilder();
        result.hasConsoleAccountId = true;
        result.consoleAccountId_ = value;
        return this;
      }
      public Builder ClearConsoleAccountId() {
        PrepareBuilder();
        result.hasConsoleAccountId = false;
        result.consoleAccountId_ = 0UL;
        return this;
      }
    }
    static ChatNormalMessage() {
      object.ReferenceEquals(global::Gazillion.GroupingManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatTellMessage : pb::GeneratedMessage<ChatTellMessage, ChatTellMessage.Builder> {
    private ChatTellMessage() { }
    private static readonly ChatTellMessage defaultInstance = new ChatTellMessage().MakeReadOnly();
    private static readonly string[] _chatTellMessageFieldNames = new string[] { "consoleAccountId", "fromPlayerName", "prestigeLevel", "theMessage" };
    private static readonly uint[] _chatTellMessageFieldTags = new uint[] { 32, 10, 24, 18 };
    public static ChatTellMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatTellMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatTellMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatTellMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatTellMessage, ChatTellMessage.Builder> InternalFieldAccessors {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatTellMessage__FieldAccessorTable; }
    }
    
    public const int FromPlayerNameFieldNumber = 1;
    private bool hasFromPlayerName;
    private string fromPlayerName_ = "";
    public bool HasFromPlayerName {
      get { return hasFromPlayerName; }
    }
    public string FromPlayerName {
      get { return fromPlayerName_; }
    }
    
    public const int TheMessageFieldNumber = 2;
    private bool hasTheMessage;
    private global::Gazillion.ChatMessage theMessage_;
    public bool HasTheMessage {
      get { return hasTheMessage; }
    }
    public global::Gazillion.ChatMessage TheMessage {
      get { return theMessage_ ?? global::Gazillion.ChatMessage.DefaultInstance; }
    }
    
    public const int PrestigeLevelFieldNumber = 3;
    private bool hasPrestigeLevel;
    private int prestigeLevel_;
    public bool HasPrestigeLevel {
      get { return hasPrestigeLevel; }
    }
    public int PrestigeLevel {
      get { return prestigeLevel_; }
    }
    
    public const int ConsoleAccountIdFieldNumber = 4;
    private bool hasConsoleAccountId;
    private ulong consoleAccountId_;
    public bool HasConsoleAccountId {
      get { return hasConsoleAccountId; }
    }
    public ulong ConsoleAccountId {
      get { return consoleAccountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFromPlayerName) return false;
        if (!hasTheMessage) return false;
        if (!TheMessage.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatTellMessageFieldNames;
      if (hasFromPlayerName) {
        output.WriteString(1, field_names[1], FromPlayerName);
      }
      if (hasTheMessage) {
        output.WriteMessage(2, field_names[3], TheMessage);
      }
      if (hasPrestigeLevel) {
        output.WriteInt32(3, field_names[2], PrestigeLevel);
      }
      if (hasConsoleAccountId) {
        output.WriteUInt64(4, field_names[0], ConsoleAccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFromPlayerName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, FromPlayerName);
      }
      if (hasTheMessage) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, TheMessage);
      }
      if (hasPrestigeLevel) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, PrestigeLevel);
      }
      if (hasConsoleAccountId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, ConsoleAccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatTellMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatTellMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatTellMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatTellMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatTellMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatTellMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatTellMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatTellMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatTellMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatTellMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatTellMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatTellMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatTellMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatTellMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatTellMessage result;
      
      private ChatTellMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatTellMessage original = result;
          result = new ChatTellMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatTellMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatTellMessage.Descriptor; }
      }
      
      public override ChatTellMessage DefaultInstanceForType {
        get { return global::Gazillion.ChatTellMessage.DefaultInstance; }
      }
      
      public override ChatTellMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatTellMessage) {
          return MergeFrom((ChatTellMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatTellMessage other) {
        if (other == global::Gazillion.ChatTellMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFromPlayerName) {
          FromPlayerName = other.FromPlayerName;
        }
        if (other.HasTheMessage) {
          MergeTheMessage(other.TheMessage);
        }
        if (other.HasPrestigeLevel) {
          PrestigeLevel = other.PrestigeLevel;
        }
        if (other.HasConsoleAccountId) {
          ConsoleAccountId = other.ConsoleAccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatTellMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatTellMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFromPlayerName = input.ReadString(ref result.fromPlayerName_);
              break;
            }
            case 18: {
              global::Gazillion.ChatMessage.Builder subBuilder = global::Gazillion.ChatMessage.CreateBuilder();
              if (result.hasTheMessage) {
                subBuilder.MergeFrom(TheMessage);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TheMessage = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasPrestigeLevel = input.ReadInt32(ref result.prestigeLevel_);
              break;
            }
            case 32: {
              result.hasConsoleAccountId = input.ReadUInt64(ref result.consoleAccountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFromPlayerName {
        get { return result.hasFromPlayerName; }
      }
      public string FromPlayerName {
        get { return result.FromPlayerName; }
        set { SetFromPlayerName(value); }
      }
      public Builder SetFromPlayerName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFromPlayerName = true;
        result.fromPlayerName_ = value;
        return this;
      }
      public Builder ClearFromPlayerName() {
        PrepareBuilder();
        result.hasFromPlayerName = false;
        result.fromPlayerName_ = "";
        return this;
      }
      
      public bool HasTheMessage {
       get { return result.hasTheMessage; }
      }
      public global::Gazillion.ChatMessage TheMessage {
        get { return result.TheMessage; }
        set { SetTheMessage(value); }
      }
      public Builder SetTheMessage(global::Gazillion.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTheMessage = true;
        result.theMessage_ = value;
        return this;
      }
      public Builder SetTheMessage(global::Gazillion.ChatMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTheMessage = true;
        result.theMessage_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTheMessage(global::Gazillion.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTheMessage &&
            result.theMessage_ != global::Gazillion.ChatMessage.DefaultInstance) {
            result.theMessage_ = global::Gazillion.ChatMessage.CreateBuilder(result.theMessage_).MergeFrom(value).BuildPartial();
        } else {
          result.theMessage_ = value;
        }
        result.hasTheMessage = true;
        return this;
      }
      public Builder ClearTheMessage() {
        PrepareBuilder();
        result.hasTheMessage = false;
        result.theMessage_ = null;
        return this;
      }
      
      public bool HasPrestigeLevel {
        get { return result.hasPrestigeLevel; }
      }
      public int PrestigeLevel {
        get { return result.PrestigeLevel; }
        set { SetPrestigeLevel(value); }
      }
      public Builder SetPrestigeLevel(int value) {
        PrepareBuilder();
        result.hasPrestigeLevel = true;
        result.prestigeLevel_ = value;
        return this;
      }
      public Builder ClearPrestigeLevel() {
        PrepareBuilder();
        result.hasPrestigeLevel = false;
        result.prestigeLevel_ = 0;
        return this;
      }
      
      public bool HasConsoleAccountId {
        get { return result.hasConsoleAccountId; }
      }
      public ulong ConsoleAccountId {
        get { return result.ConsoleAccountId; }
        set { SetConsoleAccountId(value); }
      }
      public Builder SetConsoleAccountId(ulong value) {
        PrepareBuilder();
        result.hasConsoleAccountId = true;
        result.consoleAccountId_ = value;
        return this;
      }
      public Builder ClearConsoleAccountId() {
        PrepareBuilder();
        result.hasConsoleAccountId = false;
        result.consoleAccountId_ = 0UL;
        return this;
      }
    }
    static ChatTellMessage() {
      object.ReferenceEquals(global::Gazillion.GroupingManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatBroadcastMessage : pb::GeneratedMessage<ChatBroadcastMessage, ChatBroadcastMessage.Builder> {
    private ChatBroadcastMessage() { }
    private static readonly ChatBroadcastMessage defaultInstance = new ChatBroadcastMessage().MakeReadOnly();
    private static readonly string[] _chatBroadcastMessageFieldNames = new string[] { "consoleAccountId", "fromPlayerName", "prestigeLevel", "roomType", "theMessage" };
    private static readonly uint[] _chatBroadcastMessageFieldTags = new uint[] { 40, 18, 32, 8, 26 };
    public static ChatBroadcastMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatBroadcastMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatBroadcastMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatBroadcastMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatBroadcastMessage, ChatBroadcastMessage.Builder> InternalFieldAccessors {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatBroadcastMessage__FieldAccessorTable; }
    }
    
    public const int RoomTypeFieldNumber = 1;
    private bool hasRoomType;
    private global::Gazillion.ChatRoomTypes roomType_ = global::Gazillion.ChatRoomTypes.CHAT_ROOM_TYPE_LOCAL;
    public bool HasRoomType {
      get { return hasRoomType; }
    }
    public global::Gazillion.ChatRoomTypes RoomType {
      get { return roomType_; }
    }
    
    public const int FromPlayerNameFieldNumber = 2;
    private bool hasFromPlayerName;
    private string fromPlayerName_ = "";
    public bool HasFromPlayerName {
      get { return hasFromPlayerName; }
    }
    public string FromPlayerName {
      get { return fromPlayerName_; }
    }
    
    public const int TheMessageFieldNumber = 3;
    private bool hasTheMessage;
    private global::Gazillion.ChatMessage theMessage_;
    public bool HasTheMessage {
      get { return hasTheMessage; }
    }
    public global::Gazillion.ChatMessage TheMessage {
      get { return theMessage_ ?? global::Gazillion.ChatMessage.DefaultInstance; }
    }
    
    public const int PrestigeLevelFieldNumber = 4;
    private bool hasPrestigeLevel;
    private int prestigeLevel_;
    public bool HasPrestigeLevel {
      get { return hasPrestigeLevel; }
    }
    public int PrestigeLevel {
      get { return prestigeLevel_; }
    }
    
    public const int ConsoleAccountIdFieldNumber = 5;
    private bool hasConsoleAccountId;
    private ulong consoleAccountId_;
    public bool HasConsoleAccountId {
      get { return hasConsoleAccountId; }
    }
    public ulong ConsoleAccountId {
      get { return consoleAccountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoomType) return false;
        if (!hasFromPlayerName) return false;
        if (!hasTheMessage) return false;
        if (!TheMessage.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatBroadcastMessageFieldNames;
      if (hasRoomType) {
        output.WriteEnum(1, field_names[3], (int) RoomType, RoomType);
      }
      if (hasFromPlayerName) {
        output.WriteString(2, field_names[1], FromPlayerName);
      }
      if (hasTheMessage) {
        output.WriteMessage(3, field_names[4], TheMessage);
      }
      if (hasPrestigeLevel) {
        output.WriteInt32(4, field_names[2], PrestigeLevel);
      }
      if (hasConsoleAccountId) {
        output.WriteUInt64(5, field_names[0], ConsoleAccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRoomType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) RoomType);
      }
      if (hasFromPlayerName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, FromPlayerName);
      }
      if (hasTheMessage) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, TheMessage);
      }
      if (hasPrestigeLevel) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, PrestigeLevel);
      }
      if (hasConsoleAccountId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, ConsoleAccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatBroadcastMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatBroadcastMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatBroadcastMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatBroadcastMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatBroadcastMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatBroadcastMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatBroadcastMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatBroadcastMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatBroadcastMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatBroadcastMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatBroadcastMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatBroadcastMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatBroadcastMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatBroadcastMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatBroadcastMessage result;
      
      private ChatBroadcastMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatBroadcastMessage original = result;
          result = new ChatBroadcastMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatBroadcastMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatBroadcastMessage.Descriptor; }
      }
      
      public override ChatBroadcastMessage DefaultInstanceForType {
        get { return global::Gazillion.ChatBroadcastMessage.DefaultInstance; }
      }
      
      public override ChatBroadcastMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatBroadcastMessage) {
          return MergeFrom((ChatBroadcastMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatBroadcastMessage other) {
        if (other == global::Gazillion.ChatBroadcastMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomType) {
          RoomType = other.RoomType;
        }
        if (other.HasFromPlayerName) {
          FromPlayerName = other.FromPlayerName;
        }
        if (other.HasTheMessage) {
          MergeTheMessage(other.TheMessage);
        }
        if (other.HasPrestigeLevel) {
          PrestigeLevel = other.PrestigeLevel;
        }
        if (other.HasConsoleAccountId) {
          ConsoleAccountId = other.ConsoleAccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatBroadcastMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatBroadcastMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.roomType_, out unknown)) {
                result.hasRoomType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasFromPlayerName = input.ReadString(ref result.fromPlayerName_);
              break;
            }
            case 26: {
              global::Gazillion.ChatMessage.Builder subBuilder = global::Gazillion.ChatMessage.CreateBuilder();
              if (result.hasTheMessage) {
                subBuilder.MergeFrom(TheMessage);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TheMessage = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasPrestigeLevel = input.ReadInt32(ref result.prestigeLevel_);
              break;
            }
            case 40: {
              result.hasConsoleAccountId = input.ReadUInt64(ref result.consoleAccountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomType {
       get { return result.hasRoomType; }
      }
      public global::Gazillion.ChatRoomTypes RoomType {
        get { return result.RoomType; }
        set { SetRoomType(value); }
      }
      public Builder SetRoomType(global::Gazillion.ChatRoomTypes value) {
        PrepareBuilder();
        result.hasRoomType = true;
        result.roomType_ = value;
        return this;
      }
      public Builder ClearRoomType() {
        PrepareBuilder();
        result.hasRoomType = false;
        result.roomType_ = global::Gazillion.ChatRoomTypes.CHAT_ROOM_TYPE_LOCAL;
        return this;
      }
      
      public bool HasFromPlayerName {
        get { return result.hasFromPlayerName; }
      }
      public string FromPlayerName {
        get { return result.FromPlayerName; }
        set { SetFromPlayerName(value); }
      }
      public Builder SetFromPlayerName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFromPlayerName = true;
        result.fromPlayerName_ = value;
        return this;
      }
      public Builder ClearFromPlayerName() {
        PrepareBuilder();
        result.hasFromPlayerName = false;
        result.fromPlayerName_ = "";
        return this;
      }
      
      public bool HasTheMessage {
       get { return result.hasTheMessage; }
      }
      public global::Gazillion.ChatMessage TheMessage {
        get { return result.TheMessage; }
        set { SetTheMessage(value); }
      }
      public Builder SetTheMessage(global::Gazillion.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTheMessage = true;
        result.theMessage_ = value;
        return this;
      }
      public Builder SetTheMessage(global::Gazillion.ChatMessage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTheMessage = true;
        result.theMessage_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTheMessage(global::Gazillion.ChatMessage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTheMessage &&
            result.theMessage_ != global::Gazillion.ChatMessage.DefaultInstance) {
            result.theMessage_ = global::Gazillion.ChatMessage.CreateBuilder(result.theMessage_).MergeFrom(value).BuildPartial();
        } else {
          result.theMessage_ = value;
        }
        result.hasTheMessage = true;
        return this;
      }
      public Builder ClearTheMessage() {
        PrepareBuilder();
        result.hasTheMessage = false;
        result.theMessage_ = null;
        return this;
      }
      
      public bool HasPrestigeLevel {
        get { return result.hasPrestigeLevel; }
      }
      public int PrestigeLevel {
        get { return result.PrestigeLevel; }
        set { SetPrestigeLevel(value); }
      }
      public Builder SetPrestigeLevel(int value) {
        PrepareBuilder();
        result.hasPrestigeLevel = true;
        result.prestigeLevel_ = value;
        return this;
      }
      public Builder ClearPrestigeLevel() {
        PrepareBuilder();
        result.hasPrestigeLevel = false;
        result.prestigeLevel_ = 0;
        return this;
      }
      
      public bool HasConsoleAccountId {
        get { return result.hasConsoleAccountId; }
      }
      public ulong ConsoleAccountId {
        get { return result.ConsoleAccountId; }
        set { SetConsoleAccountId(value); }
      }
      public Builder SetConsoleAccountId(ulong value) {
        PrepareBuilder();
        result.hasConsoleAccountId = true;
        result.consoleAccountId_ = value;
        return this;
      }
      public Builder ClearConsoleAccountId() {
        PrepareBuilder();
        result.hasConsoleAccountId = false;
        result.consoleAccountId_ = 0UL;
        return this;
      }
    }
    static ChatBroadcastMessage() {
      object.ReferenceEquals(global::Gazillion.GroupingManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatErrorMessage : pb::GeneratedMessage<ChatErrorMessage, ChatErrorMessage.Builder> {
    private ChatErrorMessage() { }
    private static readonly ChatErrorMessage defaultInstance = new ChatErrorMessage().MakeReadOnly();
    private static readonly string[] _chatErrorMessageFieldNames = new string[] { "errorMessage" };
    private static readonly uint[] _chatErrorMessageFieldTags = new uint[] { 8 };
    public static ChatErrorMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatErrorMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatErrorMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatErrorMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatErrorMessage, ChatErrorMessage.Builder> InternalFieldAccessors {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatErrorMessage__FieldAccessorTable; }
    }
    
    public const int ErrorMessageFieldNumber = 1;
    private bool hasErrorMessage;
    private global::Gazillion.ChatErrorMessages errorMessage_ = global::Gazillion.ChatErrorMessages.CHAT_ERROR_NO_SUCH_USER;
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public global::Gazillion.ChatErrorMessages ErrorMessage {
      get { return errorMessage_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorMessage) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatErrorMessageFieldNames;
      if (hasErrorMessage) {
        output.WriteEnum(1, field_names[0], (int) ErrorMessage, ErrorMessage);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorMessage) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ErrorMessage);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatErrorMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatErrorMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatErrorMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatErrorMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatErrorMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatErrorMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatErrorMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatErrorMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatErrorMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatErrorMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatErrorMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatErrorMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatErrorMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatErrorMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatErrorMessage result;
      
      private ChatErrorMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatErrorMessage original = result;
          result = new ChatErrorMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatErrorMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatErrorMessage.Descriptor; }
      }
      
      public override ChatErrorMessage DefaultInstanceForType {
        get { return global::Gazillion.ChatErrorMessage.DefaultInstance; }
      }
      
      public override ChatErrorMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatErrorMessage) {
          return MergeFrom((ChatErrorMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatErrorMessage other) {
        if (other == global::Gazillion.ChatErrorMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorMessage) {
          ErrorMessage = other.ErrorMessage;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatErrorMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatErrorMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.errorMessage_, out unknown)) {
                result.hasErrorMessage = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorMessage {
       get { return result.hasErrorMessage; }
      }
      public global::Gazillion.ChatErrorMessages ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(global::Gazillion.ChatErrorMessages value) {
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = global::Gazillion.ChatErrorMessages.CHAT_ERROR_NO_SUCH_USER;
        return this;
      }
    }
    static ChatErrorMessage() {
      object.ReferenceEquals(global::Gazillion.GroupingManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatBanVoteResponse : pb::GeneratedMessage<ChatBanVoteResponse, ChatBanVoteResponse.Builder> {
    private ChatBanVoteResponse() { }
    private static readonly ChatBanVoteResponse defaultInstance = new ChatBanVoteResponse().MakeReadOnly();
    private static readonly string[] _chatBanVoteResponseFieldNames = new string[] { "responseCode", "targetPlayerName" };
    private static readonly uint[] _chatBanVoteResponseFieldTags = new uint[] { 16, 10 };
    public static ChatBanVoteResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatBanVoteResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatBanVoteResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatBanVoteResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatBanVoteResponse, ChatBanVoteResponse.Builder> InternalFieldAccessors {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatBanVoteResponse__FieldAccessorTable; }
    }
    
    public const int TargetPlayerNameFieldNumber = 1;
    private bool hasTargetPlayerName;
    private string targetPlayerName_ = "";
    public bool HasTargetPlayerName {
      get { return hasTargetPlayerName; }
    }
    public string TargetPlayerName {
      get { return targetPlayerName_; }
    }
    
    public const int ResponseCodeFieldNumber = 2;
    private bool hasResponseCode;
    private global::Gazillion.ChatBanVoteResponseCode responseCode_ = global::Gazillion.ChatBanVoteResponseCode.CHAT_BAN_VOTE_SUCCESS;
    public bool HasResponseCode {
      get { return hasResponseCode; }
    }
    public global::Gazillion.ChatBanVoteResponseCode ResponseCode {
      get { return responseCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetPlayerName) return false;
        if (!hasResponseCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatBanVoteResponseFieldNames;
      if (hasTargetPlayerName) {
        output.WriteString(1, field_names[1], TargetPlayerName);
      }
      if (hasResponseCode) {
        output.WriteEnum(2, field_names[0], (int) ResponseCode, ResponseCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTargetPlayerName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TargetPlayerName);
      }
      if (hasResponseCode) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) ResponseCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatBanVoteResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatBanVoteResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatBanVoteResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatBanVoteResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatBanVoteResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatBanVoteResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatBanVoteResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatBanVoteResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatBanVoteResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatBanVoteResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatBanVoteResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatBanVoteResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatBanVoteResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatBanVoteResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatBanVoteResponse result;
      
      private ChatBanVoteResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatBanVoteResponse original = result;
          result = new ChatBanVoteResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatBanVoteResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatBanVoteResponse.Descriptor; }
      }
      
      public override ChatBanVoteResponse DefaultInstanceForType {
        get { return global::Gazillion.ChatBanVoteResponse.DefaultInstance; }
      }
      
      public override ChatBanVoteResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatBanVoteResponse) {
          return MergeFrom((ChatBanVoteResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatBanVoteResponse other) {
        if (other == global::Gazillion.ChatBanVoteResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTargetPlayerName) {
          TargetPlayerName = other.TargetPlayerName;
        }
        if (other.HasResponseCode) {
          ResponseCode = other.ResponseCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatBanVoteResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatBanVoteResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTargetPlayerName = input.ReadString(ref result.targetPlayerName_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.responseCode_, out unknown)) {
                result.hasResponseCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetPlayerName {
        get { return result.hasTargetPlayerName; }
      }
      public string TargetPlayerName {
        get { return result.TargetPlayerName; }
        set { SetTargetPlayerName(value); }
      }
      public Builder SetTargetPlayerName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetPlayerName = true;
        result.targetPlayerName_ = value;
        return this;
      }
      public Builder ClearTargetPlayerName() {
        PrepareBuilder();
        result.hasTargetPlayerName = false;
        result.targetPlayerName_ = "";
        return this;
      }
      
      public bool HasResponseCode {
       get { return result.hasResponseCode; }
      }
      public global::Gazillion.ChatBanVoteResponseCode ResponseCode {
        get { return result.ResponseCode; }
        set { SetResponseCode(value); }
      }
      public Builder SetResponseCode(global::Gazillion.ChatBanVoteResponseCode value) {
        PrepareBuilder();
        result.hasResponseCode = true;
        result.responseCode_ = value;
        return this;
      }
      public Builder ClearResponseCode() {
        PrepareBuilder();
        result.hasResponseCode = false;
        result.responseCode_ = global::Gazillion.ChatBanVoteResponseCode.CHAT_BAN_VOTE_SUCCESS;
        return this;
      }
    }
    static ChatBanVoteResponse() {
      object.ReferenceEquals(global::Gazillion.GroupingManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatCreateChatRoomResult : pb::GeneratedMessage<ChatCreateChatRoomResult, ChatCreateChatRoomResult.Builder> {
    private ChatCreateChatRoomResult() { }
    private static readonly ChatCreateChatRoomResult defaultInstance = new ChatCreateChatRoomResult().MakeReadOnly();
    private static readonly string[] _chatCreateChatRoomResultFieldNames = new string[] { "reason", "requestingGameId", "success" };
    private static readonly uint[] _chatCreateChatRoomResultFieldTags = new uint[] { 18, 24, 8 };
    public static ChatCreateChatRoomResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatCreateChatRoomResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatCreateChatRoomResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatCreateChatRoomResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatCreateChatRoomResult, ChatCreateChatRoomResult.Builder> InternalFieldAccessors {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatCreateChatRoomResult__FieldAccessorTable; }
    }
    
    public const int RequestingGameIdFieldNumber = 3;
    private bool hasRequestingGameId;
    private ulong requestingGameId_;
    public bool HasRequestingGameId {
      get { return hasRequestingGameId; }
    }
    public ulong RequestingGameId {
      get { return requestingGameId_; }
    }
    
    public const int SuccessFieldNumber = 1;
    private bool hasSuccess;
    private bool success_;
    public bool HasSuccess {
      get { return hasSuccess; }
    }
    public bool Success {
      get { return success_; }
    }
    
    public const int ReasonFieldNumber = 2;
    private bool hasReason;
    private string reason_ = "";
    public bool HasReason {
      get { return hasReason; }
    }
    public string Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestingGameId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatCreateChatRoomResultFieldNames;
      if (hasSuccess) {
        output.WriteBool(1, field_names[2], Success);
      }
      if (hasReason) {
        output.WriteString(2, field_names[0], Reason);
      }
      if (hasRequestingGameId) {
        output.WriteUInt64(3, field_names[1], RequestingGameId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestingGameId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, RequestingGameId);
      }
      if (hasSuccess) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, Success);
      }
      if (hasReason) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Reason);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatCreateChatRoomResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatCreateChatRoomResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatCreateChatRoomResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatCreateChatRoomResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatCreateChatRoomResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatCreateChatRoomResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatCreateChatRoomResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatCreateChatRoomResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatCreateChatRoomResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatCreateChatRoomResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatCreateChatRoomResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatCreateChatRoomResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatCreateChatRoomResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatCreateChatRoomResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatCreateChatRoomResult result;
      
      private ChatCreateChatRoomResult PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatCreateChatRoomResult original = result;
          result = new ChatCreateChatRoomResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatCreateChatRoomResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatCreateChatRoomResult.Descriptor; }
      }
      
      public override ChatCreateChatRoomResult DefaultInstanceForType {
        get { return global::Gazillion.ChatCreateChatRoomResult.DefaultInstance; }
      }
      
      public override ChatCreateChatRoomResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatCreateChatRoomResult) {
          return MergeFrom((ChatCreateChatRoomResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatCreateChatRoomResult other) {
        if (other == global::Gazillion.ChatCreateChatRoomResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestingGameId) {
          RequestingGameId = other.RequestingGameId;
        }
        if (other.HasSuccess) {
          Success = other.Success;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatCreateChatRoomResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatCreateChatRoomResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSuccess = input.ReadBool(ref result.success_);
              break;
            }
            case 18: {
              result.hasReason = input.ReadString(ref result.reason_);
              break;
            }
            case 24: {
              result.hasRequestingGameId = input.ReadUInt64(ref result.requestingGameId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestingGameId {
        get { return result.hasRequestingGameId; }
      }
      public ulong RequestingGameId {
        get { return result.RequestingGameId; }
        set { SetRequestingGameId(value); }
      }
      public Builder SetRequestingGameId(ulong value) {
        PrepareBuilder();
        result.hasRequestingGameId = true;
        result.requestingGameId_ = value;
        return this;
      }
      public Builder ClearRequestingGameId() {
        PrepareBuilder();
        result.hasRequestingGameId = false;
        result.requestingGameId_ = 0UL;
        return this;
      }
      
      public bool HasSuccess {
        get { return result.hasSuccess; }
      }
      public bool Success {
        get { return result.Success; }
        set { SetSuccess(value); }
      }
      public Builder SetSuccess(bool value) {
        PrepareBuilder();
        result.hasSuccess = true;
        result.success_ = value;
        return this;
      }
      public Builder ClearSuccess() {
        PrepareBuilder();
        result.hasSuccess = false;
        result.success_ = false;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public string Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = "";
        return this;
      }
    }
    static ChatCreateChatRoomResult() {
      object.ReferenceEquals(global::Gazillion.GroupingManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatAddPlayerToRoomResult : pb::GeneratedMessage<ChatAddPlayerToRoomResult, ChatAddPlayerToRoomResult.Builder> {
    private ChatAddPlayerToRoomResult() { }
    private static readonly ChatAddPlayerToRoomResult defaultInstance = new ChatAddPlayerToRoomResult().MakeReadOnly();
    private static readonly string[] _chatAddPlayerToRoomResultFieldNames = new string[] { "reason", "requestingGameId", "success" };
    private static readonly uint[] _chatAddPlayerToRoomResultFieldTags = new uint[] { 18, 24, 8 };
    public static ChatAddPlayerToRoomResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatAddPlayerToRoomResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatAddPlayerToRoomResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatAddPlayerToRoomResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatAddPlayerToRoomResult, ChatAddPlayerToRoomResult.Builder> InternalFieldAccessors {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatAddPlayerToRoomResult__FieldAccessorTable; }
    }
    
    public const int RequestingGameIdFieldNumber = 3;
    private bool hasRequestingGameId;
    private ulong requestingGameId_;
    public bool HasRequestingGameId {
      get { return hasRequestingGameId; }
    }
    public ulong RequestingGameId {
      get { return requestingGameId_; }
    }
    
    public const int SuccessFieldNumber = 1;
    private bool hasSuccess;
    private bool success_;
    public bool HasSuccess {
      get { return hasSuccess; }
    }
    public bool Success {
      get { return success_; }
    }
    
    public const int ReasonFieldNumber = 2;
    private bool hasReason;
    private string reason_ = "";
    public bool HasReason {
      get { return hasReason; }
    }
    public string Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestingGameId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatAddPlayerToRoomResultFieldNames;
      if (hasSuccess) {
        output.WriteBool(1, field_names[2], Success);
      }
      if (hasReason) {
        output.WriteString(2, field_names[0], Reason);
      }
      if (hasRequestingGameId) {
        output.WriteUInt64(3, field_names[1], RequestingGameId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestingGameId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, RequestingGameId);
      }
      if (hasSuccess) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, Success);
      }
      if (hasReason) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Reason);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatAddPlayerToRoomResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatAddPlayerToRoomResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatAddPlayerToRoomResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatAddPlayerToRoomResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatAddPlayerToRoomResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatAddPlayerToRoomResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatAddPlayerToRoomResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatAddPlayerToRoomResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatAddPlayerToRoomResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatAddPlayerToRoomResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatAddPlayerToRoomResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatAddPlayerToRoomResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatAddPlayerToRoomResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatAddPlayerToRoomResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatAddPlayerToRoomResult result;
      
      private ChatAddPlayerToRoomResult PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatAddPlayerToRoomResult original = result;
          result = new ChatAddPlayerToRoomResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatAddPlayerToRoomResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatAddPlayerToRoomResult.Descriptor; }
      }
      
      public override ChatAddPlayerToRoomResult DefaultInstanceForType {
        get { return global::Gazillion.ChatAddPlayerToRoomResult.DefaultInstance; }
      }
      
      public override ChatAddPlayerToRoomResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatAddPlayerToRoomResult) {
          return MergeFrom((ChatAddPlayerToRoomResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatAddPlayerToRoomResult other) {
        if (other == global::Gazillion.ChatAddPlayerToRoomResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestingGameId) {
          RequestingGameId = other.RequestingGameId;
        }
        if (other.HasSuccess) {
          Success = other.Success;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatAddPlayerToRoomResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatAddPlayerToRoomResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSuccess = input.ReadBool(ref result.success_);
              break;
            }
            case 18: {
              result.hasReason = input.ReadString(ref result.reason_);
              break;
            }
            case 24: {
              result.hasRequestingGameId = input.ReadUInt64(ref result.requestingGameId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestingGameId {
        get { return result.hasRequestingGameId; }
      }
      public ulong RequestingGameId {
        get { return result.RequestingGameId; }
        set { SetRequestingGameId(value); }
      }
      public Builder SetRequestingGameId(ulong value) {
        PrepareBuilder();
        result.hasRequestingGameId = true;
        result.requestingGameId_ = value;
        return this;
      }
      public Builder ClearRequestingGameId() {
        PrepareBuilder();
        result.hasRequestingGameId = false;
        result.requestingGameId_ = 0UL;
        return this;
      }
      
      public bool HasSuccess {
        get { return result.hasSuccess; }
      }
      public bool Success {
        get { return result.Success; }
        set { SetSuccess(value); }
      }
      public Builder SetSuccess(bool value) {
        PrepareBuilder();
        result.hasSuccess = true;
        result.success_ = value;
        return this;
      }
      public Builder ClearSuccess() {
        PrepareBuilder();
        result.hasSuccess = false;
        result.success_ = false;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public string Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = "";
        return this;
      }
    }
    static ChatAddPlayerToRoomResult() {
      object.ReferenceEquals(global::Gazillion.GroupingManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatScrubTextResult : pb::GeneratedMessage<ChatScrubTextResult, ChatScrubTextResult.Builder> {
    private ChatScrubTextResult() { }
    private static readonly ChatScrubTextResult defaultInstance = new ChatScrubTextResult().MakeReadOnly();
    private static readonly string[] _chatScrubTextResultFieldNames = new string[] { "remoteJobId", "requestingGameId", "textOriginal", "textScrubbed" };
    private static readonly uint[] _chatScrubTextResultFieldTags = new uint[] { 32, 8, 18, 26 };
    public static ChatScrubTextResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatScrubTextResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatScrubTextResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatScrubTextResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatScrubTextResult, ChatScrubTextResult.Builder> InternalFieldAccessors {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatScrubTextResult__FieldAccessorTable; }
    }
    
    public const int RequestingGameIdFieldNumber = 1;
    private bool hasRequestingGameId;
    private ulong requestingGameId_;
    public bool HasRequestingGameId {
      get { return hasRequestingGameId; }
    }
    public ulong RequestingGameId {
      get { return requestingGameId_; }
    }
    
    public const int TextOriginalFieldNumber = 2;
    private bool hasTextOriginal;
    private string textOriginal_ = "";
    public bool HasTextOriginal {
      get { return hasTextOriginal; }
    }
    public string TextOriginal {
      get { return textOriginal_; }
    }
    
    public const int TextScrubbedFieldNumber = 3;
    private bool hasTextScrubbed;
    private string textScrubbed_ = "";
    public bool HasTextScrubbed {
      get { return hasTextScrubbed; }
    }
    public string TextScrubbed {
      get { return textScrubbed_; }
    }
    
    public const int RemoteJobIdFieldNumber = 4;
    private bool hasRemoteJobId;
    private ulong remoteJobId_;
    public bool HasRemoteJobId {
      get { return hasRemoteJobId; }
    }
    public ulong RemoteJobId {
      get { return remoteJobId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestingGameId) return false;
        if (!hasTextOriginal) return false;
        if (!hasTextScrubbed) return false;
        if (!hasRemoteJobId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatScrubTextResultFieldNames;
      if (hasRequestingGameId) {
        output.WriteUInt64(1, field_names[1], RequestingGameId);
      }
      if (hasTextOriginal) {
        output.WriteString(2, field_names[2], TextOriginal);
      }
      if (hasTextScrubbed) {
        output.WriteString(3, field_names[3], TextScrubbed);
      }
      if (hasRemoteJobId) {
        output.WriteUInt64(4, field_names[0], RemoteJobId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestingGameId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, RequestingGameId);
      }
      if (hasTextOriginal) {
        size += pb::CodedOutputStream.ComputeStringSize(2, TextOriginal);
      }
      if (hasTextScrubbed) {
        size += pb::CodedOutputStream.ComputeStringSize(3, TextScrubbed);
      }
      if (hasRemoteJobId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, RemoteJobId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatScrubTextResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatScrubTextResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatScrubTextResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatScrubTextResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatScrubTextResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatScrubTextResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatScrubTextResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatScrubTextResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatScrubTextResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatScrubTextResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatScrubTextResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatScrubTextResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatScrubTextResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatScrubTextResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatScrubTextResult result;
      
      private ChatScrubTextResult PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatScrubTextResult original = result;
          result = new ChatScrubTextResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatScrubTextResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatScrubTextResult.Descriptor; }
      }
      
      public override ChatScrubTextResult DefaultInstanceForType {
        get { return global::Gazillion.ChatScrubTextResult.DefaultInstance; }
      }
      
      public override ChatScrubTextResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatScrubTextResult) {
          return MergeFrom((ChatScrubTextResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatScrubTextResult other) {
        if (other == global::Gazillion.ChatScrubTextResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestingGameId) {
          RequestingGameId = other.RequestingGameId;
        }
        if (other.HasTextOriginal) {
          TextOriginal = other.TextOriginal;
        }
        if (other.HasTextScrubbed) {
          TextScrubbed = other.TextScrubbed;
        }
        if (other.HasRemoteJobId) {
          RemoteJobId = other.RemoteJobId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatScrubTextResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatScrubTextResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestingGameId = input.ReadUInt64(ref result.requestingGameId_);
              break;
            }
            case 18: {
              result.hasTextOriginal = input.ReadString(ref result.textOriginal_);
              break;
            }
            case 26: {
              result.hasTextScrubbed = input.ReadString(ref result.textScrubbed_);
              break;
            }
            case 32: {
              result.hasRemoteJobId = input.ReadUInt64(ref result.remoteJobId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestingGameId {
        get { return result.hasRequestingGameId; }
      }
      public ulong RequestingGameId {
        get { return result.RequestingGameId; }
        set { SetRequestingGameId(value); }
      }
      public Builder SetRequestingGameId(ulong value) {
        PrepareBuilder();
        result.hasRequestingGameId = true;
        result.requestingGameId_ = value;
        return this;
      }
      public Builder ClearRequestingGameId() {
        PrepareBuilder();
        result.hasRequestingGameId = false;
        result.requestingGameId_ = 0UL;
        return this;
      }
      
      public bool HasTextOriginal {
        get { return result.hasTextOriginal; }
      }
      public string TextOriginal {
        get { return result.TextOriginal; }
        set { SetTextOriginal(value); }
      }
      public Builder SetTextOriginal(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTextOriginal = true;
        result.textOriginal_ = value;
        return this;
      }
      public Builder ClearTextOriginal() {
        PrepareBuilder();
        result.hasTextOriginal = false;
        result.textOriginal_ = "";
        return this;
      }
      
      public bool HasTextScrubbed {
        get { return result.hasTextScrubbed; }
      }
      public string TextScrubbed {
        get { return result.TextScrubbed; }
        set { SetTextScrubbed(value); }
      }
      public Builder SetTextScrubbed(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTextScrubbed = true;
        result.textScrubbed_ = value;
        return this;
      }
      public Builder ClearTextScrubbed() {
        PrepareBuilder();
        result.hasTextScrubbed = false;
        result.textScrubbed_ = "";
        return this;
      }
      
      public bool HasRemoteJobId {
        get { return result.hasRemoteJobId; }
      }
      public ulong RemoteJobId {
        get { return result.RemoteJobId; }
        set { SetRemoteJobId(value); }
      }
      public Builder SetRemoteJobId(ulong value) {
        PrepareBuilder();
        result.hasRemoteJobId = true;
        result.remoteJobId_ = value;
        return this;
      }
      public Builder ClearRemoteJobId() {
        PrepareBuilder();
        result.hasRemoteJobId = false;
        result.remoteJobId_ = 0UL;
        return this;
      }
    }
    static ChatScrubTextResult() {
      object.ReferenceEquals(global::Gazillion.GroupingManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatServerNotification : pb::GeneratedMessage<ChatServerNotification, ChatServerNotification.Builder> {
    private ChatServerNotification() { }
    private static readonly ChatServerNotification defaultInstance = new ChatServerNotification().MakeReadOnly();
    private static readonly string[] _chatServerNotificationFieldNames = new string[] { "theMessage" };
    private static readonly uint[] _chatServerNotificationFieldTags = new uint[] { 10 };
    public static ChatServerNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatServerNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatServerNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatServerNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatServerNotification, ChatServerNotification.Builder> InternalFieldAccessors {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatServerNotification__FieldAccessorTable; }
    }
    
    public const int TheMessageFieldNumber = 1;
    private bool hasTheMessage;
    private string theMessage_ = "";
    public bool HasTheMessage {
      get { return hasTheMessage; }
    }
    public string TheMessage {
      get { return theMessage_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTheMessage) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatServerNotificationFieldNames;
      if (hasTheMessage) {
        output.WriteString(1, field_names[0], TheMessage);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTheMessage) {
        size += pb::CodedOutputStream.ComputeStringSize(1, TheMessage);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatServerNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatServerNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatServerNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatServerNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatServerNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatServerNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatServerNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatServerNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatServerNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatServerNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatServerNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatServerNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatServerNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatServerNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatServerNotification result;
      
      private ChatServerNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatServerNotification original = result;
          result = new ChatServerNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatServerNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatServerNotification.Descriptor; }
      }
      
      public override ChatServerNotification DefaultInstanceForType {
        get { return global::Gazillion.ChatServerNotification.DefaultInstance; }
      }
      
      public override ChatServerNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatServerNotification) {
          return MergeFrom((ChatServerNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatServerNotification other) {
        if (other == global::Gazillion.ChatServerNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTheMessage) {
          TheMessage = other.TheMessage;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatServerNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatServerNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasTheMessage = input.ReadString(ref result.theMessage_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTheMessage {
        get { return result.hasTheMessage; }
      }
      public string TheMessage {
        get { return result.TheMessage; }
        set { SetTheMessage(value); }
      }
      public Builder SetTheMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTheMessage = true;
        result.theMessage_ = value;
        return this;
      }
      public Builder ClearTheMessage() {
        PrepareBuilder();
        result.hasTheMessage = false;
        result.theMessage_ = "";
        return this;
      }
    }
    static ChatServerNotification() {
      object.ReferenceEquals(global::Gazillion.GroupingManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChatClientIsLoggedIn : pb::GeneratedMessage<ChatClientIsLoggedIn, ChatClientIsLoggedIn.Builder> {
    private ChatClientIsLoggedIn() { }
    private static readonly ChatClientIsLoggedIn defaultInstance = new ChatClientIsLoggedIn().MakeReadOnly();
    private static readonly string[] _chatClientIsLoggedInFieldNames = new string[] { "playerDbId", "requestingGameId" };
    private static readonly uint[] _chatClientIsLoggedInFieldTags = new uint[] { 16, 8 };
    public static ChatClientIsLoggedIn DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChatClientIsLoggedIn DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChatClientIsLoggedIn ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatClientIsLoggedIn__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChatClientIsLoggedIn, ChatClientIsLoggedIn.Builder> InternalFieldAccessors {
      get { return global::Gazillion.GroupingManager.internal__static_Gazillion_ChatClientIsLoggedIn__FieldAccessorTable; }
    }
    
    public const int RequestingGameIdFieldNumber = 1;
    private bool hasRequestingGameId;
    private ulong requestingGameId_;
    public bool HasRequestingGameId {
      get { return hasRequestingGameId; }
    }
    public ulong RequestingGameId {
      get { return requestingGameId_; }
    }
    
    public const int PlayerDbIdFieldNumber = 2;
    private bool hasPlayerDbId;
    private ulong playerDbId_;
    public bool HasPlayerDbId {
      get { return hasPlayerDbId; }
    }
    public ulong PlayerDbId {
      get { return playerDbId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestingGameId) return false;
        if (!hasPlayerDbId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chatClientIsLoggedInFieldNames;
      if (hasRequestingGameId) {
        output.WriteUInt64(1, field_names[1], RequestingGameId);
      }
      if (hasPlayerDbId) {
        output.WriteUInt64(2, field_names[0], PlayerDbId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestingGameId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, RequestingGameId);
      }
      if (hasPlayerDbId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, PlayerDbId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChatClientIsLoggedIn ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatClientIsLoggedIn ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatClientIsLoggedIn ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChatClientIsLoggedIn ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChatClientIsLoggedIn ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatClientIsLoggedIn ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChatClientIsLoggedIn ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChatClientIsLoggedIn ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChatClientIsLoggedIn ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChatClientIsLoggedIn ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChatClientIsLoggedIn MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChatClientIsLoggedIn prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChatClientIsLoggedIn, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChatClientIsLoggedIn cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChatClientIsLoggedIn result;
      
      private ChatClientIsLoggedIn PrepareBuilder() {
        if (resultIsReadOnly) {
          ChatClientIsLoggedIn original = result;
          result = new ChatClientIsLoggedIn();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChatClientIsLoggedIn MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.ChatClientIsLoggedIn.Descriptor; }
      }
      
      public override ChatClientIsLoggedIn DefaultInstanceForType {
        get { return global::Gazillion.ChatClientIsLoggedIn.DefaultInstance; }
      }
      
      public override ChatClientIsLoggedIn BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChatClientIsLoggedIn) {
          return MergeFrom((ChatClientIsLoggedIn) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChatClientIsLoggedIn other) {
        if (other == global::Gazillion.ChatClientIsLoggedIn.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestingGameId) {
          RequestingGameId = other.RequestingGameId;
        }
        if (other.HasPlayerDbId) {
          PlayerDbId = other.PlayerDbId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chatClientIsLoggedInFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chatClientIsLoggedInFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestingGameId = input.ReadUInt64(ref result.requestingGameId_);
              break;
            }
            case 16: {
              result.hasPlayerDbId = input.ReadUInt64(ref result.playerDbId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestingGameId {
        get { return result.hasRequestingGameId; }
      }
      public ulong RequestingGameId {
        get { return result.RequestingGameId; }
        set { SetRequestingGameId(value); }
      }
      public Builder SetRequestingGameId(ulong value) {
        PrepareBuilder();
        result.hasRequestingGameId = true;
        result.requestingGameId_ = value;
        return this;
      }
      public Builder ClearRequestingGameId() {
        PrepareBuilder();
        result.hasRequestingGameId = false;
        result.requestingGameId_ = 0UL;
        return this;
      }
      
      public bool HasPlayerDbId {
        get { return result.hasPlayerDbId; }
      }
      public ulong PlayerDbId {
        get { return result.PlayerDbId; }
        set { SetPlayerDbId(value); }
      }
      public Builder SetPlayerDbId(ulong value) {
        PrepareBuilder();
        result.hasPlayerDbId = true;
        result.playerDbId_ = value;
        return this;
      }
      public Builder ClearPlayerDbId() {
        PrepareBuilder();
        result.hasPlayerDbId = false;
        result.playerDbId_ = 0UL;
        return this;
      }
    }
    static ChatClientIsLoggedIn() {
      object.ReferenceEquals(global::Gazillion.GroupingManager.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
